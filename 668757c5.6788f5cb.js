(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{98:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return d})),n.d(t,"metadata",(function(){return m})),n.d(t,"rightToc",(function(){return s})),n.d(t,"SelectionSort",(function(){return u})),n.d(t,"default",(function(){return p}));var i=n(1),r=n(6),a=n(0),o=n.n(a),l=n(130),c=n(153),d={id:"SelectionSort",title:"Selection Sort",sidebar_label:"Selection Sort"},m={unversionedId:"Algorithms/Sorting/SelectionSort",id:"Algorithms/Sorting/SelectionSort",isDocsHomePage:!1,title:"Selection Sort",description:"Idea",source:"@site/docs/Algorithms/Sorting/SelectionSort.md",permalink:"/docs/Algorithms/Sorting/SelectionSort",sidebar_label:"Selection Sort",sidebar:"Algorithms",previous:{title:"Odd-Even Sort",permalink:"/docs/Algorithms/Sorting/OddEvenSort"},next:{title:"Insertion Sort",permalink:"/docs/Algorithms/Sorting/InsertionSort"}},s=[{value:"Idea",id:"idea",children:[]},{value:"Visualization",id:"visualization",children:[]},{value:"Implementation",id:"implementation",children:[]},{value:"Time and Space Analysis",id:"time-and-space-analysis",children:[]}],u=function(e){var t=e.data,n=o.a.useState(0),i=n[0],r=n[1];return Object(l.b)("div",{className:"controller"},Object(l.b)(c.VerticalBarChart,{data:t[i],mdxType:"VerticalBarChart"}),Object(l.b)("br",null),Object(l.b)(c.Button,{onClick:function(){return r(i-1)},disabled:0==i,mdxType:"Button"},"Previous"),Object(l.b)(c.Button,{onClick:function(){return r(i+1)},disabled:i==t.length-1,mdxType:"Button"},"Next"))},b={rightToc:s,SelectionSort:u};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(i.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"idea"},"Idea"),Object(l.b)("p",null,"The idea is to select the smallest element of remaining array and then swap it to the front."),Object(l.b)("h2",{id:"visualization"},"Visualization"),Object(l.b)(u,{data:[[29,72,98,13,87,66,52,51,36],[13,72,98,29,87,66,52,51,36],[13,29,98,72,87,66,52,51,36],[13,29,36,72,87,66,52,51,98],[13,29,36,51,87,66,52,72,98],[13,29,36,51,52,66,87,72,98],[13,29,36,51,52,66,72,87,98]],mdxType:"SelectionSort"}),Object(l.b)("h2",{id:"implementation"},"Implementation"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"scan array, find the minimum element's index min_idx"),Object(l.b)("li",{parentName:"ul"},"swap the element to the index i, then incrememnt i")),Object(l.b)("pre",null,Object(l.b)("code",Object(i.a)({parentName:"pre"},{className:"language-java"}),"public class SelectionSort{\n    void selectionSort(int arr[]) {\n        int n = arr.length; \n    \n        // One by one move boundary of unsorted subarray \n        for (int i = 0; i < n-1; i++) { \n            // Find the minimum element in the input array \n            int min_idx = i; \n            for (int j = i+1; j < n; j++) \n                if (arr[j] < arr[min_idx]) \n                    min_idx = j; \n    \n            // Swap the found minimum element with the ith element\n            int temp = arr[min_idx]; \n            arr[min_idx] = arr[i]; \n            arr[i] = temp; \n        }\n    }\n}\n")),Object(l.b)("h2",{id:"time-and-space-analysis"},"Time and Space Analysis"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Time O(n^2)"),Object(l.b)("li",{parentName:"ul"},"Space O(1)")))}p.isMDXComponent=!0}}]);