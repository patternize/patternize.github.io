/*! For license information please see c35955ec.88b6743e.js.LICENSE */
(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{128:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return u})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return d}));var r=t(1),a=t(6),i=(t(0),t(145)),o=t(156),l=t(157),c={id:"LC310",title:"LC310. Minimum Height Trees",sidebar_label:"LC310. Minimum Height Trees",tags:["Patterns/Graph"]},u={id:"QuestionBank/Leetcode/LC310",title:"LC310. Minimum Height Trees",description:"import Tabs from '@theme/Tabs';",source:"@site/docs/QuestionBank/Leetcode/310. Minimum Height Trees.md",permalink:"/docs/QuestionBank/Leetcode/LC310",sidebar_label:"LC310. Minimum Height Trees",sidebar:"Patterns",previous:{title:"Bit Manipulation",permalink:"/docs/Patterns/BitManipulation/README"}},s=[{value:"Problem Description",id:"problem-description",children:[]},{value:"Solution",id:"solution",children:[]}],p={rightToc:s};function d(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"problem-description"},"Problem Description"),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://leetcode.com/problems/minimum-height-trees/"}),"https://leetcode.com/problems/minimum-height-trees/")),Object(i.b)("p",null,"For an undirected graph with tree characteristics, we can choose any node as the root. The result graph is then a rooted tree. Among all possible rooted trees, those with minimum height are called minimum height trees (MHTs). Given such a graph, write a function to find all the MHTs and return a list of their root labels."),Object(i.b)("p",null,"Format\nThe graph contains n nodes which are labeled from 0 to n - 1. You will be given the number n and a list of undirected edges (each edge is a pair of labels)."),Object(i.b)("p",null,"You can assume that no duplicate edges will appear in edges. Since all edges are undirected, ","[0, 1]"," is the same as ","[1, 0]"," and thus will not appear together in edges."),Object(i.b)("p",null,"Example 1 :"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"Input: n = 4, edges = [[1, 0], [1, 2], [1, 3]]\n\n        0\n        |\n        1\n       / \\\n      2   3 \n\nOutput: [1]\n")),Object(i.b)("p",null,"Example 2 :"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{}),"Input: n = 6, edges = [[0, 3], [1, 3], [2, 3], [4, 3], [5, 4]]\n\n     0  1  2\n      \\ | /\n        3\n        |\n        4\n        |\n        5 \n\nOutput: [3, 4]\n")),Object(i.b)("h2",{id:"solution"},"Solution"),Object(i.b)(o.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"Python",value:"py"}],mdxType:"Tabs"},Object(i.b)(l.a,{value:"java",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"\nclass Solution {\n    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {\n        List<List<Integer>> toRet = new ArrayList<>();\n        if (root == null) return toRet;\n        Queue<TreeNode> queue = new LinkedList<>();\n        queue.add(root);\n        int count;\n        boolean leftToRight = true;\n        while(!queue.isEmpty()){\n            count = queue.size();\n            ArrayList<Integer> level = new ArrayList<>();\n            for (int i = 0; i < count; i ++){\n                TreeNode node = queue.poll();\n                if(leftToRight) {\n                    level.add(node.val);\n                } else {\n                    level.add(0, node.val);\n                }\n                if(node.left != null){\n                    queue.add(node.left);\n                }\n                if(node.right != null){\n                    queue.add(node.right);\n                }\n            }\n            leftToRight = !leftToRight;\n            toRet.add(level);\n        }\n        return toRet;\n    }\n}\n"))),Object(i.b)(l.a,{value:"py",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-py"}),'class Solution(object):\n    def findMinHeightTrees(self, n, edges):\n        """\n        :type n: int\n        :type edges: List[List[int]]\n        :rtype: List[int]\n        """\n\n        graph = collections.defaultdict(set)\n        for u,v in edges: \n            graph[u].add(v)\n            graph[v].add(u)\n\n        leaves = { i for i in range(n) if len(graph[i]) <= 1 } \n        newLeaves = set() \n\n        rn = n \n\n        while rn > 2: \n            for l in leaves: \n                rn -= 1\n                for parent in graph[l]: \n                    graph[parent].remove(l) \n                    if len(graph[parent]) == 1: \n                        newLeaves.add(parent)\n            leaves = newLeaves\n            newLeaves = set()\n\n        return list(leaves)\n')))))}d.isMDXComponent=!0},145:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return f}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=a.a.createContext({}),s=function(e){var n=a.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l({},n,{},e)),t},p=function(e){var n=s(e.components);return a.a.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(t),b=r,f=p["".concat(o,".").concat(b)]||p[b]||d[b]||i;return t?a.a.createElement(f,l({ref:n},u,{components:t})):a.a.createElement(f,l({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=b;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=t[u];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},146:function(e,n,t){var r;!function(){"use strict";var t={}.hasOwnProperty;function a(){for(var e=[],n=0;n<arguments.length;n++){var r=arguments[n];if(r){var i=typeof r;if("string"===i||"number"===i)e.push(r);else if(Array.isArray(r)&&r.length){var o=a.apply(null,r);o&&e.push(o)}else if("object"===i)for(var l in r)t.call(r,l)&&r[l]&&e.push(l)}}return e.join(" ")}e.exports?(a.default=a,e.exports=a):void 0===(r=function(){return a}.apply(n,[]))||(e.exports=r)}()},156:function(e,n,t){"use strict";var r=t(0),a=t.n(r),i=t(146),o=t.n(i),l=t(88),c=t.n(l);const u=37,s=39;n.a=function(e){const{block:n,children:t,defaultValue:i,values:l}=e,[p,d]=Object(r.useState)(i),b=[];return a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:o()("tabs",{"tabs--block":n})},l.map(({value:e,label:n})=>a.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":p===e,className:o()("tab-item",c.a.tabItem,{"tab-item--active":p===e}),key:e,ref:e=>b.push(e),onKeyDown:e=>((e,n,t)=>{switch(t.keyCode){case s:((e,n)=>{const t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()})(e,n);break;case u:((e,n)=>{const t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()})(e,n)}})(b,e.target,e),onFocus:()=>d(e),onClick:()=>d(e)},n))),a.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},r.Children.toArray(t).filter(e=>e.props.value===p)[0]))}},157:function(e,n,t){"use strict";var r=t(0),a=t.n(r);n.a=function(e){return a.a.createElement("div",null,e.children)}}}]);