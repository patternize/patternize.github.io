(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{147:function(e,n,t){"use strict";function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}t.d(n,"a",(function(){return r}))},148:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return f}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=a.a.createContext({}),l=function(e){var n=a.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=l(e.components);return a.a.createElement(u.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(t),m=r,f=p["".concat(i,".").concat(m)]||p[m]||b[m]||o;return t?a.a.createElement(f,c(c({ref:n},u),{},{components:t})):a.a.createElement(f,c({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var u=2;u<o;u++)i[u]=t[u];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},149:function(e,n,t){"use strict";function r(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}t.d(n,"a",(function(){return r}))},150:function(e,n,t){"use strict";function r(e){var n,t,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=r(e[n]))&&(a&&(a+=" "),a+=t);else for(n in e)e[n]&&(a&&(a+=" "),a+=n);return a}n.a=function(){for(var e,n,t=0,a="";t<arguments.length;)(e=arguments[t++])&&(n=r(e))&&(a&&(a+=" "),a+=n);return a}},151:function(e,n,t){"use strict";var r=t(0),a=t.n(r),o=t(153),i=t(150),c=t(53),s=t.n(c);const u=37,l=39;n.a=function(e){const{lazy:n,block:t,defaultValue:c,values:p,groupId:b,className:m}=e,{tabGroupChoices:f,setTabGroupChoices:d}=Object(o.a)(),[g,O]=Object(r.useState)(c),y=r.Children.toArray(e.children);if(null!=b){const e=f[b];null!=e&&e!==g&&p.some((n=>n.value===e))&&O(e)}const v=e=>{O(e),null!=b&&d(b,e)},j=[];return a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":t},m)},p.map((({value:e,label:n})=>a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===e,className:Object(i.a)("tabs__item",s.a.tabItem,{"tabs__item--active":g===e}),key:e,ref:e=>j.push(e),onKeyDown:e=>{((e,n,t)=>{switch(t.keyCode){case l:((e,n)=>{const t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()})(e,n);break;case u:((e,n)=>{const t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()})(e,n)}})(j,e.target,e)},onFocus:()=>v(e),onClick:()=>{v(e)}},n)))),n?Object(r.cloneElement)(y.filter((e=>e.props.value===g))[0],{className:"margin-vert--md"}):a.a.createElement("div",{className:"margin-vert--md"},y.map(((e,n)=>Object(r.cloneElement)(e,{key:n,hidden:e.props.value!==g})))))}},152:function(e,n,t){"use strict";var r=t(147),a=t(0),o=t.n(a);n.a=function({children:e,hidden:n,className:t}){return o.a.createElement("div",Object(r.a)({role:"tabpanel"},{hidden:n,className:t}),e)}},153:function(e,n,t){"use strict";var r=t(0),a=t(154);n.a=function(){const e=Object(r.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},154:function(e,n,t){"use strict";var r=t(0);const a=Object(r.createContext)(void 0);n.a=a},55:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return u})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return b}));var r=t(147),a=t(149),o=(t(0),t(148)),i=t(151),c=t(152),s={title:"Leetcode 674. Longest Continuous Increasing Subsequence",tags:["DynamicProgramming/Coordinate"]},u={unversionedId:"Patterns/DynamicProgramming/Coordinate/Array/674-longest-continuous-increasing-subsequence",id:"Patterns/DynamicProgramming/Coordinate/Array/674-longest-continuous-increasing-subsequence",isDocsHomePage:!1,title:"Leetcode 674. Longest Continuous Increasing Subsequence",description:"Question",source:"@site/docs/Patterns/DynamicProgramming/Coordinate/Array/674-longest-continuous-increasing-subsequence.md",slug:"/Patterns/DynamicProgramming/Coordinate/Array/674-longest-continuous-increasing-subsequence",permalink:"/docs/Patterns/DynamicProgramming/Coordinate/Array/674-longest-continuous-increasing-subsequence",version:"current"},l=[{value:"Example 1:",id:"example-1",children:[]},{value:"Example 2:",id:"example-2",children:[]}],p={toc:l};function b(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"question"},"Question"),Object(o.b)("p",null,"Original Question: ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://leetcode.com/problems/longest-continuous-increasing-subsequence/"}),"Leetcode 674. Longest Continuous Increasing Subsequence")),Object(o.b)("p",null,"Given an unsorted array of integers, find the length of longest continuous increasing subsequence (subarray)."),Object(o.b)("h3",{id:"example-1"},"Example 1:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"Input: [1,3,5,4,7]\nOutput: 3\nExplanation: The longest continuous increasing subsequence is [1,3,5], its length is 3. \nEven though [1,3,5,7] is also an increasing subsequence, it's not a continuous one where 5 and 7 are separated by 4.\n")),Object(o.b)("h3",{id:"example-2"},"Example 2:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"Input: [2,2,2,2,2]\nOutput: 1\nExplanation: The longest continuous increasing subsequence is [2], its length is 1. \n")),Object(o.b)("h1",{id:"solution"},"Solution"),Object(o.b)(i.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"Python",value:"py"}],mdxType:"Tabs"},Object(o.b)(c.a,{value:"java",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"class Solution {\n    public int findLengthOfLCIS(int[] nums) {\n        if(nums.length == 0) return 0;\n        int dp[] = new int[nums.length];\n        dp[0] = 1;\n        int res = 1;\n        for(int i = 1; i < nums.length; i++){\n            if(nums[i] > nums[i-1]){\n                dp[i] = dp[i-1]+1;\n            } else {\n                dp[i] = 1;\n            }\n            res = Math.max(dp[i], res);\n        }\n        return res;\n    }\n}\n"))),Object(o.b)(c.a,{value:"py",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-py"}),"class Solution(object):\n    def findLengthOfLCIS(self, nums):\n        if not nums:\n            return 0\n        dp = [1] * len(nums)\n        for i in range(1, len(nums)):\n            if nums[i] > nums[i-1]:\n                dp[i] = dp[i - 1] + 1\n        return max(dp)\n")))))}b.isMDXComponent=!0}}]);