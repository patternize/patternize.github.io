(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{96:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return n})),a.d(e,"metadata",(function(){return s})),a.d(e,"rightToc",(function(){return c})),a.d(e,"default",(function(){return b}));var r=a(1),i=a(6),l=(a(0),a(112)),n={id:"list",title:"List",sidebar_label:"List"},s={id:"DataStructure/list",title:"List",description:"## Iterate through Values:",source:"@site/docs/DataStructure/List.md",permalink:"/docs/DataStructure/list",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/DataStructure/List.md",sidebar_label:"List",sidebar:"doc",next:{title:"Map",permalink:"/docs/DataStructure/map"}},c=[{value:"Iterate through Values:",id:"iterate-through-values",children:[]},{value:"Declare with default values:",id:"declare-with-default-values",children:[{value:"Convert a primitive list to a List object:",id:"convert-a-primitive-list-to-a-list-object",children:[]}]}],u={rightToc:c},o="wrapper";function b(t){var e=t.components,a=Object(i.a)(t,["components"]);return Object(l.b)(o,Object(r.a)({},u,a,{components:e,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"iterate-through-values"},"Iterate through Values:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"use for loop directly:")),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"// List<List<Interval>> avails);\nfor (List<Interval> employeeIntervals: avails){\n  for (Interval interval: employeeIntervals){\n    // do...\n  }\n}\n")),Object(l.b)("h2",{id:"declare-with-default-values"},"Declare with default values:"),Object(l.b)("h3",{id:"convert-a-primitive-list-to-a-list-object"},"Convert a primitive list to a List object:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Use Case 1: I know my values")),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),'String a[] = new String[] { "A", "B", "C", "D" }; \nList<String> list = Arrays.asList(a); \n// or\nList<String> list2 = Arrays.asList("1", "2", "3");\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Use Case 2: I know my length:")),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-java"}),"String a[] = new String[(1 << 8) -1];  // know my length\nList<String> list = Arrays.asList(a); \n")))}b.isMDXComponent=!0}}]);