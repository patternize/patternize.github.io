(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{130:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return b}));var a=t(0),i=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=i.a.createContext({}),s=function(e){var n=i.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=s(e.components);return i.a.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},f=i.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=s(t),f=a,b=m["".concat(o,".").concat(f)]||m[f]||p[f]||r;return t?i.a.createElement(b,l(l({ref:n},u),{},{components:t})):i.a.createElement(b,l({ref:n},u))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=f;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<r;u++)o[u]=t[u];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},131:function(e,n,t){"use strict";function a(e){var n,t,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=a(e[n]))&&(i&&(i+=" "),i+=t);else for(n in e)e[n]&&(i&&(i+=" "),i+=n);return i}n.a=function(){for(var e,n,t=0,i="";t<arguments.length;)(e=arguments[t++])&&(n=a(e))&&(i&&(i+=" "),i+=n);return i}},132:function(e,n,t){"use strict";var a=t(0),i=t.n(a),r=t(135),o=t(131),l=t(48),c=t.n(l);const u=37,s=39;n.a=function(e){const{block:n,children:t,defaultValue:l,values:m,groupId:p}=e,{tabGroupChoices:f,setTabGroupChoices:b}=Object(r.a)(),[d,j]=Object(a.useState)(l),[g,h]=Object(a.useState)(!1);if(null!=p){const e=f[p];null!=e&&e!==d&&m.some(n=>n.value===e)&&j(e)}const O=e=>{j(e),null!=p&&b(p,e)},y=[],v=e=>{e.metaKey||e.altKey||e.ctrlKey||h(!0)},A=()=>{h(!1)};return Object(a.useEffect)(()=>{window.addEventListener("keydown",v),window.addEventListener("mousedown",A)},[]),i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":n})},m.map(({value:e,label:n})=>i.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":d===e,className:Object(o.a)("tabs__item",c.a.tabItem,{"tabs__item--active":d===e}),style:g?{}:{outline:"none"},key:e,ref:e=>y.push(e),onKeyDown:e=>{((e,n,t)=>{switch(t.keyCode){case s:((e,n)=>{const t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()})(e,n);break;case u:((e,n)=>{const t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()})(e,n)}})(y,e.target,e),v(e)},onFocus:()=>O(e),onClick:()=>{O(e),h(!1)},onPointerDown:()=>h(!1)},n))),i.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(t).filter(e=>e.props.value===d)[0]))}},133:function(e,n,t){"use strict";var a=t(0),i=t.n(a);n.a=function(e){return i.a.createElement("div",null,e.children)}},134:function(e,n,t){"use strict";var a=t(0);const i=Object(a.createContext)(void 0);n.a=i},135:function(e,n,t){"use strict";var a=t(0),i=t(134);n.a=function(){const e=Object(a.useContext)(i.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},157:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/MinimumFallingPathSum-a4ffea2f95fc4bf4f745c33c53b2cb67.jpg"},55:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return u})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return p}));var a=t(1),i=t(6),r=(t(0),t(130)),o=t(132),l=t(133),c={title:"Leetcode 931. Minimum Falling Path Sum",tags:["DynamicProgramming/Coordinate"]},u={unversionedId:"Patterns/DynamicProgramming/Coordinate/OptimalPathFinding/931-minimum-falling-path-sum",id:"Patterns/DynamicProgramming/Coordinate/OptimalPathFinding/931-minimum-falling-path-sum",isDocsHomePage:!1,title:"Leetcode 931. Minimum Falling Path Sum",description:"Question Description",source:"@site/docs/Patterns/DynamicProgramming/Coordinate/OptimalPathFinding/931-minimum-falling-path-sum.md",permalink:"/docs/Patterns/DynamicProgramming/Coordinate/OptimalPathFinding/931-minimum-falling-path-sum"},s=[{value:"Example:",id:"example",children:[]}],m={rightToc:s};function p(e){var n=e.components,c=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},m,c,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("img",{src:t(157).default})),Object(r.b)("h1",{id:"question-description"},"Question Description"),Object(r.b)("p",null,"Original Question: ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://leetcode.com/problems/minimum-falling-path-sum/"}),"931. Minimum Falling Path Sum")),Object(r.b)("p",null,"Given a square array of integers A, we want the minimum sum of a falling path through A."),Object(r.b)("p",null,"A falling path starts at any element in the first row, and chooses one element from each row.  The next row's choice must be in a column that is different from the previous row's column by at most one."),Object(r.b)("h3",{id:"example"},"Example:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-aidl"}),"Input: [[1,2,3],[4,5,6],[7,8,9]]\nOutput: 12\nExplanation: \nThe possible falling paths are:\n- [1,4,7], [1,4,8], [1,5,7], [1,5,8], [1,5,9]\n- [2,4,7], [2,4,8], [2,5,7], [2,5,8], [2,5,9], [2,6,8], [2,6,9]\n- [3,5,7], [3,5,8], [3,5,9], [3,6,8], [3,6,9]\n\nThe falling path with the smallest sum is [1,4,7], so the answer is 12.\n\n")),Object(r.b)("h1",{id:"solution"},"Solution"),Object(r.b)(o.a,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"Python",value:"py"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"java",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-java"}),"class Solution {\n    public int minFallingPathSum(int[][] A) {\n        int m = A.length, n = A[0].length;\n        int[][] dp = new int[m][n];\n        for(int i = 0; i < n; i++){\n            dp[0][i] = A[0][i];\n        }\n        for(int i = 1; i < m; i++){\n            for(int j = 0; j < n; j++){\n                int topLeft = j-1 < 0 ? Integer.MAX_VALUE : dp[i-1][j-1];\n                int topMid = dp[i-1][j];\n                int topRight = j+1 >= n ? Integer.MAX_VALUE : dp[i-1][j+1];\n                dp[i][j] = A[i][j] + Math.min(topLeft, Math.min(topMid, topRight));\n            }\n        }\n        int smallestPath = Integer.MAX_VALUE;\n        for(int i = 0; i < n; i++){\n            smallestPath = Math.min(smallestPath, dp[m-1][i]);\n        }\n        return smallestPath;\n    }\n}\n"))),Object(r.b)(l.a,{value:"py",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-py"}),"class Solution:\n    def minFallingPathSum(self, A: List[List[int]]) -> int:\n        for i in range(1,len(A)):\n            for j in range(len(A[0])):\n                if j == 0:\n                    A[i][j]  = min((A[i][j] + A[i - 1][j]), (A[i][j] + A[i - 1][j + 1]) )\n                elif (j == len(A[0]) - 1):\n                    A[i][j]  = min((A[i][j] + A[i - 1][j]), (A[i][j] + A[i - 1][j - 1]) )\n                else:\n                    A[i][j] = min(A[i][j] + A[i - 1][j],A[i][j] + A[i - 1][j + 1], A[i][j] + A[i - 1][j - 1])\n            \n        return min(A[len(A) - 1])\n")))))}p.isMDXComponent=!0}}]);