(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{149:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return d}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=a.a.createContext({}),l=function(e){var t=a.a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},s=function(e){var t=l(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=l(r),m=n,d=s["".concat(p,".").concat(m)]||s[m]||b[m]||o;return r?a.a.createElement(d,c(c({ref:t},u),{},{components:r})):a.a.createElement(d,c({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,p=new Array(o);p[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,p[1]=c;for(var u=2;u<o;u++)p[u]=r[u];return a.a.createElement.apply(null,p)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},91:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return p})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return i})),r.d(t,"default",(function(){return l}));var n=r(3),a=r(7),o=(r(0),r(149)),p={id:"TreeMap",title:"TreeMap",sidebar_label:"TreeMap"},c={unversionedId:"Language/Java/Map/TreeMap",id:"Language/Java/Map/TreeMap",isDocsHomePage:!1,title:"TreeMap",description:"Basics",source:"@site/docs/Language/Java/Map/TreeMap.md",slug:"/Language/Java/Map/TreeMap",permalink:"/docs/Language/Java/Map/TreeMap",version:"current",sidebar_label:"TreeMap",sidebar:"Language",previous:{title:"HashTable",permalink:"/docs/Language/Java/Map/HashTable"},next:{title:"LinkedHashMap",permalink:"/docs/Language/Java/Map/LinkedHashMap"}},i=[{value:"Basics",id:"basics",children:[]},{value:"TreeMap vs HashMap",id:"treemap-vs-hashmap",children:[]}],u={toc:i};function l(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"basics"},"Basics"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"TreeMap is ordered by Keys"),Object(o.b)("li",{parentName:"ul"},"put(), get(), remove() all cost O(logN) in the worst scenario"),Object(o.b)("li",{parentName:"ul"},"Iteration order predictable"),Object(o.b)("li",{parentName:"ul"},"Allows only Values to be null, Keys cannot be null")),Object(o.b)("h2",{id:"treemap-vs-hashmap"},"TreeMap vs HashMap"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"TreeMap are naturally sorted by order of key, HashMap is not:")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"TreeMap<Integer, Integer> tm = new TreeMap<>();\ntm.put(3, 1);\ntm.put(2, 2);\ntm.put(1, 10);\ntm.put(-100, 2);\ntm.values(); //[2, 10, 2, 1]\n\nHashMap<Integer, Integer> hm = new HashMap<>();\nhm.put(3, 1);\nhm.put(2, 2);\nhm.put(1, 10);\nhm.put(-100, 2);\nhm.values(); // [10, 2, 1, 2]\n")))}l.isMDXComponent=!0}}]);