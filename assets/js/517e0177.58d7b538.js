"use strict";(self.webpackChunkpatternize_io=self.webpackChunkpatternize_io||[]).push([[9282],{5680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>d});var n=r(6540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(r),y=o,d=m["".concat(s,".").concat(y)]||m[y]||u[y]||i;return r?n.createElement(d,a(a({ref:t},p),{},{components:r})):n.createElement(d,a({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=y;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},1067:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>c,toc:()=>m});var n=r(8168),o=r(8587),i=(r(6540),r(5680));const a=["components"],l={id:"InsertionSort",title:"Insertion Sort",sidebar_label:"Insertion Sort"},s=void 0,c={unversionedId:"Algorithms/Sorting/InsertionSort",id:"Algorithms/Sorting/InsertionSort",title:"Insertion Sort",description:"Idea",source:"@site/docs/Algorithms/Sorting/InsertionSort.md",sourceDirName:"Algorithms/Sorting",slug:"/Algorithms/Sorting/InsertionSort",permalink:"/docs/Algorithms/Sorting/InsertionSort",draft:!1,tags:[],version:"current",frontMatter:{id:"InsertionSort",title:"Insertion Sort",sidebar_label:"Insertion Sort"},sidebar:"Algorithms",previous:{title:"Selection Sort",permalink:"/docs/Algorithms/Sorting/SelectionSort"},next:{title:"Merge Sort",permalink:"/docs/Algorithms/Sorting/MergeSort"}},p={},m=[{value:"Idea",id:"idea",level:2},{value:"Implementation",id:"implementation",level:2},{value:"Time and Space Analysis",id:"time-and-space-analysis",level:2}],u={toc:m},y="wrapper";function d(e){let{components:t}=e,r=(0,o.A)(e,a);return(0,i.yg)(y,(0,n.A)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"idea"},"Idea"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"The idea is to remove one entry at a time and insert it into the correct position in the sorted part.")),(0,i.yg)("h2",{id:"implementation"},"Implementation"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-java"},"void insertionSort(int arr[]) {  \n    int i, key, j;  \n    for (i = 1; i < arr.length; i++){  \n        key = arr[i];  \n        j = i - 1;\n        // Move elements that are greater than key to the right by one position   \n        while (j >= 0 && arr[j] > key) {  \n            arr[j + 1] = arr[j];  \n            j = j - 1;\n        }\n        // insert the key to the head of the above elements\n        arr[j + 1] = key;  \n    }  \n}  \n")),(0,i.yg)("h2",{id:"time-and-space-analysis"},"Time and Space Analysis"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Time O(n^2)"),(0,i.yg)("li",{parentName:"ul"},"Space O(1)")))}d.isMDXComponent=!0}}]);