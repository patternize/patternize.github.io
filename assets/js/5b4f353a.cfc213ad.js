"use strict";(self.webpackChunkpatternize_io=self.webpackChunkpatternize_io||[]).push([[4084],{5680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>g});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),m=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=m(e.components);return r.createElement(u.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=m(t),p=a,g=c["".concat(u,".").concat(p)]||c[p]||d[p]||i;return t?r.createElement(g,l(l({ref:n},s),{},{components:t})):r.createElement(g,l({ref:n},s))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=p;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var m=2;m<i;m++)l[m]=t[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},9365:(e,n,t)=>{t.d(n,{A:()=>l});var r=t(6540),a=t(53);const i={tabItem:"tabItem_Ymn6"};function l(e){let{children:n,hidden:t,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.A)(i.tabItem,l),hidden:t},n)}},1470:(e,n,t)=>{t.d(n,{A:()=>P});var r=t(8168),a=t(6540),i=t(53),l=t(3104),o=t(6347),u=t(7485),m=t(1682),s=t(9466);function c(e){return function(e){var n,t;return null!=(n=null==(t=a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}function d(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=null!=n?n:c(t);return function(e){const n=(0,m.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const r=(0,o.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,u.aZ)(i),(0,a.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(r.location.search);n.set(i,e),r.replace(Object.assign({},r.location,{search:n.toString()}))}),[i,r])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,i=d(e),[l,o]=(0,a.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+r.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const a=null!=(n=r.find((e=>e.default)))?n:r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:i}))),[u,m]=g({queryString:t,groupId:r}),[c,f]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[r,i]=(0,s.Dv)(t);return[r,(0,a.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:r}),h=(()=>{const e=null!=u?u:c;return p({value:e,tabValues:i})?e:null})();(0,a.useLayoutEffect)((()=>{h&&o(h)}),[h]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);o(e),m(e),f(e)}),[m,f,i]),tabValues:i}}var h=t(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:n,block:t,selectedValue:o,selectValue:u,tabValues:m}=e;const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),d=e=>{const n=e.currentTarget,t=s.indexOf(n),r=m[t].value;r!==o&&(c(n),u(r))},p=e=>{var n;let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{var r;const n=s.indexOf(e.currentTarget)+1;t=null!=(r=s[n])?r:s[0];break}case"ArrowLeft":{var a;const n=s.indexOf(e.currentTarget)-1;t=null!=(a=s[n])?a:s[s.length-1];break}}null==(n=t)||n.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n)},m.map((e=>{let{value:n,label:t,attributes:l}=e;return a.createElement("li",(0,r.A)({role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,key:n,ref:e=>s.push(e),onKeyDown:p,onClick:d},l,{className:(0,i.A)("tabs__item",b.tabItem,null==l?void 0:l.className,{"tabs__item--active":o===n})}),null!=t?t:n)})))}function v(e){let{lazy:n,children:t,selectedValue:r}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},i.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r}))))}function j(e){const n=f(e);return a.createElement("div",{className:(0,i.A)("tabs-container",b.tabList)},a.createElement(y,(0,r.A)({},e,n)),a.createElement(v,(0,r.A)({},e,n)))}function P(e){const n=(0,h.A)();return a.createElement(j,(0,r.A)({key:String(n)},e))}},3297:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>m,metadata:()=>c,toc:()=>p});var r=t(8168),a=t(8587),i=(t(6540),t(5680)),l=t(1470),o=t(9365);const u=["components"],m={title:"Leetcode 64. Minimum Path Sum",tags:["DynamicProgramming/Coordinate"]},s=void 0,c={unversionedId:"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/minimum-path-sum",id:"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/minimum-path-sum",title:"Leetcode 64. Minimum Path Sum",description:"Original Question: Leetcode 64. Minimum Path Sum",source:"@site/docs/Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/64-minimum-path-sum.md",sourceDirName:"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding",slug:"/Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/minimum-path-sum",permalink:"/Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/minimum-path-sum",draft:!1,tags:[{label:"DynamicProgramming/Coordinate",permalink:"/tags/dynamic-programming-coordinate"}],version:"current",sidebarPosition:64,frontMatter:{title:"Leetcode 64. Minimum Path Sum",tags:["DynamicProgramming/Coordinate"]},sidebar:"Algorithms",previous:{title:"Leetcode 63. Unique Paths II",permalink:"/Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/unique-paths-ii"},next:{title:"Leetcode 931. Minimum Falling Path Sum",permalink:"/Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/minimum-falling-path-sum"}},d={},p=[{value:"Example:",id:"example",level:3}],g={toc:p},f="wrapper";function h(e){let{components:n}=e,m=(0,a.A)(e,u);return(0,i.yg)(f,(0,r.A)({},g,m,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("p",null,(0,i.yg)("img",{src:t(8841).A,width:"714",height:"527"})),(0,i.yg)("h1",{id:"question-description"},"Question Description"),(0,i.yg)("p",null,"Original Question: ",(0,i.yg)("a",{parentName:"p",href:"https://leetcode.com/problems/minimum-path-sum/"},"Leetcode 64. Minimum Path Sum")),(0,i.yg)("p",null,"Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path."),(0,i.yg)("p",null,"Note: You can only move either down or right at any point in time."),(0,i.yg)("h3",{id:"example"},"Example:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-aidl"},"Input:\n[\n  [1,3,1],\n  [1,5,1],\n  [4,2,1]\n]\nOutput: 7\nExplanation: Because the path 1\u21923\u21921\u21921\u21921 minimizes the sum.\n")),(0,i.yg)("h1",{id:"solution"},"Solution"),(0,i.yg)(l.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"Python",value:"py"}],mdxType:"Tabs"},(0,i.yg)(o.A,{value:"java",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    public int minPathSum(int[][] grid) {\n        if(grid.length == 0 || grid[0].length == 0) return 0;\n        int[][] dp = new int [grid.length][grid[0].length];\n        for(int i = 0; i<grid.length; i++){\n            for(int j = 0; j < grid[0].length; j++){\n                if(i==0 && j==0) dp[i][j] = grid[0][0];\n                else if(i==0) {\n                    dp[i][j] = grid[i][j] + dp[i][j-1];\n                } else if (j == 0){\n                    dp[i][j] = grid[i][j] + dp[i-1][j];\n                } else {\n                    dp[i][j] = grid[i][j] + Math.min(dp[i-1][j], dp[i][j-1]);\n                }\n            }\n        }\n        return dp[grid.length-1][grid[0].length-1];\n    }\n}\n"))),(0,i.yg)(o.A,{value:"py",mdxType:"TabItem"},(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def minPathSum(self, grid: List[List[int]]) -> int:\n        if not grid or not grid[0]:\n            return 0\n\n        m,n = len(grid), len(grid[0])\n\n\n        minSum = [[0 for j in range(n)] for i in range(m) ] \n        minSum[0][0] = grid[0][0]\n\n        for i in range(1,m):\n            minSum[i][0] = minSum[i-1][0] + grid[i][0]\n\n        for j in range(1,n):\n            minSum[0][j] = minSum[0][j-1] + grid[0][j]\n\n        for i in range(1,m):\n            for j in range(1,n):\n                minSum[i][j] = min(minSum[i-1][j], minSum[i][j-1]) + grid[i][j]\n\n        return minSum[m-1][n-1]\n")))))}h.isMDXComponent=!0},8841:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/MinimumPathSum-442c8c2cba704b5eb8e8baf1a7ec4672.jpg"}}]);