"use strict";(self.webpackChunkpatternize_io=self.webpackChunkpatternize_io||[]).push([[8581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"Algorithms":[{"type":"category","label":"Sorting","collapsed":false,"items":[{"type":"link","label":"Bubble Sort","href":"/Algorithms/Sorting/BubbleSort","docId":"Algorithms/Sorting/BubbleSort"},{"type":"link","label":"Insertion Sort","href":"/Algorithms/Sorting/InsertionSort","docId":"Algorithms/Sorting/InsertionSort"},{"type":"link","label":"Merge Sort","href":"/Algorithms/Sorting/MergeSort","docId":"Algorithms/Sorting/MergeSort"},{"type":"link","label":"Odd-Even Sort","href":"/Algorithms/Sorting/OddEvenSort","docId":"Algorithms/Sorting/OddEvenSort"},{"type":"link","label":"Selection Sort","href":"/Algorithms/Sorting/SelectionSort","docId":"Algorithms/Sorting/SelectionSort"}],"collapsible":true},{"type":"category","label":"Backtracking","items":[{"type":"link","label":"Introduction to Backtracking","href":"/Algorithms/Backtracking/Introduction","docId":"Algorithms/Backtracking/Introduction"},{"type":"link","label":"Confusing Number Algorithm","href":"/Algorithms/Backtracking/confusing-number","docId":"Algorithms/Backtracking/confusing-number"},{"type":"link","label":"Expression Puzzle","href":"/Algorithms/Backtracking/ExpressionPuzzle","docId":"Algorithms/Backtracking/ExpressionPuzzle"},{"type":"link","label":"Find Permutations using Backtracking","href":"/Algorithms/Backtracking/permutation-backtracking","docId":"Algorithms/Backtracking/Permutation"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Graph","items":[{"type":"link","label":"Breadth First Search (BFS)","href":"/Algorithms/Graph/breadth-first-search","docId":"Algorithms/Graph/BFS"},{"type":"link","label":"Depth First Search (DFS)","href":"/Algorithms/Graph/depth-first-search","docId":"Algorithms/Graph/DFS"},{"type":"link","label":"Dijkstra\'s Algorithm","href":"/Algorithms/Graph/dijkstra-algorithm","docId":"Algorithms/Graph/Dijkstra"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Dynamic Programming","items":[{"type":"category","label":"Coordinate Based","items":[{"type":"category","label":"Array","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Leetcode 674. Longest Continuous Increasing Subsequence","href":"/Algorithms/DynamicProgramming/Coordinate/Array/longest-continuous-increasing-subsequence","docId":"Algorithms/DynamicProgramming/Coordinate/Array/longest-continuous-increasing-subsequence"}],"href":"/Algorithms/DynamicProgramming/Coordinate/Array/"},{"type":"link","label":"Introduction","href":"/Algorithms/DynamicProgramming/Coordinate/intro","docId":"Algorithms/DynamicProgramming/Coordinate/intro"},{"type":"category","label":"Matrix","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Leetcode 221. Maximal Square","href":"/Algorithms/DynamicProgramming/Coordinate/Matrix/maximal-square","docId":"Algorithms/DynamicProgramming/Coordinate/Matrix/maximal-square"},{"type":"link","label":"Leetcode 361. Bomb Enemy","href":"/Algorithms/DynamicProgramming/Coordinate/Matrix/bomb-enemy","docId":"Algorithms/DynamicProgramming/Coordinate/Matrix/bomb-enemy"},{"type":"link","label":"Leetcode 1277. Count Square Submatrices with All Ones","href":"/Algorithms/DynamicProgramming/Coordinate/Matrix/count-square-submatrices-with-all-ones","docId":"Algorithms/DynamicProgramming/Coordinate/Matrix/count-square-submatrices-with-all-ones"}],"href":"/Algorithms/DynamicProgramming/Coordinate/Matrix/"},{"type":"category","label":"Optimal Path Finding","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Leetcode 62. Unique Paths","href":"/Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/unique-paths","docId":"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/unique-paths"},{"type":"link","label":"Leetcode 63. Unique Paths II","href":"/Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/unique-paths-ii","docId":"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/unique-paths-ii"},{"type":"link","label":"Leetcode 64. Minimum Path Sum","href":"/Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/minimum-path-sum","docId":"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/minimum-path-sum"},{"type":"link","label":"Leetcode 931. Minimum Falling Path Sum","href":"/Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/minimum-falling-path-sum","docId":"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/minimum-falling-path-sum"}],"href":"/Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Sliding Window","items":[{"type":"link","label":"Introduction","href":"/Algorithms/SlidingWindow/Introduction","docId":"Algorithms/SlidingWindow/Introduction"},{"type":"link","label":"Maximum Sum Subarray","href":"/Algorithms/SlidingWindow/MaxSumSubarray","docId":"Algorithms/SlidingWindow/MaxSumSubarray"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Interval","items":[{"type":"link","label":"Introduction","href":"/Algorithms/Interval/Introduction","docId":"Algorithms/Interval/Introduction"},{"type":"link","label":"Line Sweep","href":"/Algorithms/Interval/LineSweep","docId":"Algorithms/Interval/LineSweep"},{"type":"link","label":"Merge Intervals","href":"/Algorithms/Interval/MergeIntervals","docId":"Algorithms/Interval/MergeIntervals"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Bit Manipulation","items":[{"type":"link","label":"Bit Manipulation Operations and Tricks","href":"/Algorithms/BitManipulation/bit-manipulation","docId":"Algorithms/BitManipulation/Introduction"}],"collapsed":true,"collapsible":true}],"Data Structure":[{"type":"category","label":"Basics","collapsed":false,"items":[{"type":"category","label":"Binary Tree","items":[{"type":"link","label":"BST Definition & Properties","href":"/DataStructures/Basic/BinaryTree/binary-search-tree-definition-properties","docId":"DataStructures/Basic/BinaryTree/binary-search-tree-definition-properties"},{"type":"link","label":"BST Operations","href":"/DataStructures/Basic/BinaryTree/binary-search-tree-operations","docId":"DataStructures/Basic/BinaryTree/binary-search-tree-operations"},{"type":"link","label":"Traversals","href":"/DataStructures/Basic/BinaryTree/BSTTraversals","docId":"DataStructures/Basic/BinaryTree/BSTTraversals"},{"type":"category","label":"CommonProblems","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Validate Binary Search Tree","href":"/DataStructures/Basic/BinaryTree/CommonProblems/LC98","docId":"DataStructures/Basic/BinaryTree/CommonProblems/LC98"},{"type":"link","label":"Symmetric Tree","href":"/DataStructures/Basic/BinaryTree/CommonProblems/LC101","docId":"DataStructures/Basic/BinaryTree/CommonProblems/LC101"},{"type":"link","label":"Binary Tree Zigzag Level Order Traversal","href":"/DataStructures/Basic/BinaryTree/CommonProblems/LC103","docId":"DataStructures/Basic/BinaryTree/CommonProblems/LC103"},{"type":"link","label":"Convert Sorted Array to Binary Search Tree","href":"/DataStructures/Basic/BinaryTree/CommonProblems/LC108","docId":"DataStructures/Basic/BinaryTree/CommonProblems/LC108"},{"type":"link","label":"Binary Tree Right Side View","href":"/DataStructures/Basic/BinaryTree/CommonProblems/LC199","docId":"DataStructures/Basic/BinaryTree/CommonProblems/LC199"},{"type":"link","label":"Lowest Common Ancestor of a Binary Tree","href":"/DataStructures/Basic/BinaryTree/CommonProblems/LC236","docId":"DataStructures/Basic/BinaryTree/CommonProblems/LC236"}]}],"collapsed":true,"collapsible":true},{"type":"category","label":"B Tree","items":[{"type":"link","label":"B+ Tree","href":"/DataStructures/Basic/BTree/BPlusTree","docId":"DataStructures/Basic/BTree/BPlusTree"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Linked List","items":[{"type":"link","label":"Deletion Operations","href":"/DataStructures/Basic/LinkedList/Deletion","docId":"DataStructures/Basic/LinkedList/Deletion"},{"type":"link","label":"Insertion Operations","href":"/DataStructures/Basic/LinkedList/Insertion","docId":"DataStructures/Basic/LinkedList/Insertion"},{"type":"link","label":"Linked List Introduction","href":"/DataStructures/Basic/LinkedList/linked-list-data-structure","docId":"DataStructures/Basic/LinkedList/linked-list-data-structure"}],"collapsed":true,"collapsible":true}],"collapsible":true},{"collapsed":false,"type":"category","label":"Advanced","items":[{"type":"link","label":"VList Implementation","href":"/DataStructures/Advanced/vlist","docId":"DataStructures/Advanced/vlist"}],"collapsible":true}],"Stories":[{"type":"link","label":"Manhattan Distance - Optimized Navigation \ud83c\udfd9","href":"/Stories/ManhattanDistance/manhattan-distance","docId":"Stories/ManhattanDistance/index"},{"type":"link","label":"React Fiber - The Game Changer \u269b\ufe0f","href":"/Stories/ReactFiber/intro-to-react-fiber","docId":"Stories/ReactFiber/index"}],"Language":[{"type":"link","label":"Preface","href":"/Language/","docId":"Language/README"},{"type":"category","label":"Java","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"List","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ArrayList","href":"/Language/Java/List/ArrayList","docId":"Language/Java/List/ArrayList"},{"type":"link","label":"Interface","href":"/Language/Java/List/Interface","docId":"Language/Java/List/Interface"},{"type":"link","label":"LinkedList","href":"/Language/Java/List/LinkedList","docId":"Language/Java/List/LinkedList"},{"type":"link","label":"Stack","href":"/Language/Java/List/Stack","docId":"Language/Java/List/Stack"},{"type":"link","label":"Runtime","href":"/Language/Java/List/Runtime","docId":"Language/Java/List/Runtime"}]},{"type":"category","label":"Map","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HashMap","href":"/Language/Java/Map/HashMap","docId":"Language/Java/Map/HashMap"},{"type":"link","label":"HashTable","href":"/Language/Java/Map/HashTable","docId":"Language/Java/Map/HashTable"},{"type":"link","label":"Interface","href":"/Language/Java/Map/Interface","docId":"Language/Java/Map/Interface"},{"type":"link","label":"LinkedHashMap","href":"/Language/Java/Map/LinkedHashMap","docId":"Language/Java/Map/LinkedHashMap"},{"type":"link","label":"TreeMap","href":"/Language/Java/Map/TreeMap","docId":"Language/Java/Map/TreeMap"},{"type":"link","label":"Runtime","href":"/Language/Java/Map/Runtime","docId":"Language/Java/Map/Runtime"}]},{"type":"link","label":"Introduction","href":"/Language/Java/Overview","docId":"Language/Java/Overview"},{"type":"category","label":"Queue","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Interface","href":"/Language/Java/Queue/Interface","docId":"Language/Java/Queue/Interface"},{"type":"link","label":"PriorityQueue","href":"/Language/Java/Queue/PriorityQueue","docId":"Language/Java/Queue/PriorityQueue"},{"type":"link","label":"Runtime","href":"/Language/Java/Queue/Runtime","docId":"Language/Java/Queue/Runtime"}]},{"type":"category","label":"Set","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"HashSet","href":"/Language/Java/Set/HashSet","docId":"Language/Java/Set/HashSet"},{"type":"link","label":"Interface","href":"/Language/Java/Set/Interface","docId":"Language/Java/Set/Interface"},{"type":"link","label":"Runtime","href":"/Language/Java/Set/Runtime","docId":"Language/Java/Set/Runtime"}]}]}]},"docs":{"Algorithms/Backtracking/confusing-number":{"id":"Algorithms/Backtracking/confusing-number","title":"Confusing Number - Backtracking Algorithm for Rotated Digits","description":"Learn how to solve the Confusing Number problem using backtracking. Find numbers that become different valid numbers when rotated 180 degrees.","sidebar":"Algorithms"},"Algorithms/Backtracking/ExpressionPuzzle":{"id":"Algorithms/Backtracking/ExpressionPuzzle","title":"Solving Expression Puzzles with Backtracking","description":"Learn how to solve cryptarithmetic and expression puzzles using backtracking algorithms. Includes detailed explanations, examples, and Java solutions.","sidebar":"Algorithms"},"Algorithms/Backtracking/Introduction":{"id":"Algorithms/Backtracking/Introduction","title":"Backtracking Algorithm","description":"Learn backtracking algorithms with step-by-step examples. Master problem-solving techniques for combinations, permutations, and optimization problems.","sidebar":"Algorithms"},"Algorithms/Backtracking/Permutation":{"id":"Algorithms/Backtracking/Permutation","title":"Find Permutations using Backtracking","description":"Learn how to solve permutation problems using backtracking algorithms. Includes detailed explanations, examples, and Java/Python solutions for generating all possible permutations.","sidebar":"Algorithms"},"Algorithms/BitManipulation/Introduction":{"id":"Algorithms/BitManipulation/Introduction","title":"Bit Manipulation Operations and Tricks","description":"Learn essential bit manipulation operations and common tricks in programming. Includes detailed explanations of bitwise operators, examples, and practical applications.","sidebar":"Algorithms"},"Algorithms/DynamicProgramming/Coordinate/Array/index":{"id":"Algorithms/DynamicProgramming/Coordinate/Array/index","title":"Array Questions","description":"<Tabs","sidebar":"Algorithms"},"Algorithms/DynamicProgramming/Coordinate/Array/longest-continuous-increasing-subsequence":{"id":"Algorithms/DynamicProgramming/Coordinate/Array/longest-continuous-increasing-subsequence","title":"Leetcode 674. Longest Continuous Increasing Subsequence","description":"Learn how to find the longest continuous increasing subsequence in an array using dynamic programming. Includes detailed explanation, examples, and Java/Python solutions.","sidebar":"Algorithms"},"Algorithms/DynamicProgramming/Coordinate/intro":{"id":"Algorithms/DynamicProgramming/Coordinate/intro","title":"Coordinate-based Dynamic Programming","description":"Introduction","sidebar":"Algorithms"},"Algorithms/DynamicProgramming/Coordinate/Matrix/bomb-enemy":{"id":"Algorithms/DynamicProgramming/Coordinate/Matrix/bomb-enemy","title":"Leetcode 361. Bomb Enemy","description":";","sidebar":"Algorithms"},"Algorithms/DynamicProgramming/Coordinate/Matrix/count-square-submatrices-with-all-ones":{"id":"Algorithms/DynamicProgramming/Coordinate/Matrix/count-square-submatrices-with-all-ones","title":"Leetcode 1277. Count Square Submatrices with All Ones","description":"Original Question: Leetcode 1277. Count Square Submatrices with All Ones","sidebar":"Algorithms"},"Algorithms/DynamicProgramming/Coordinate/Matrix/index":{"id":"Algorithms/DynamicProgramming/Coordinate/Matrix/index","title":"Matrix Questions","description":"<Tabs","sidebar":"Algorithms"},"Algorithms/DynamicProgramming/Coordinate/Matrix/maximal-square":{"id":"Algorithms/DynamicProgramming/Coordinate/Matrix/maximal-square","title":"Leetcode 221. Maximal Square","description":"Original Question: Leetcode 221. Maximal Square","sidebar":"Algorithms"},"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/index":{"id":"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/index","title":"Optimal Path Finding Questions","description":"<Tabs","sidebar":"Algorithms"},"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/minimum-falling-path-sum":{"id":"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/minimum-falling-path-sum","title":"Leetcode 931. Minimum Falling Path Sum","description":"Original Question: 931. Minimum Falling Path Sum","sidebar":"Algorithms"},"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/minimum-path-sum":{"id":"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/minimum-path-sum","title":"Leetcode 64. Minimum Path Sum","description":"Original Question: Leetcode 64. Minimum Path Sum","sidebar":"Algorithms"},"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/unique-paths":{"id":"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/unique-paths","title":"Leetcode 62. Unique Paths","description":"Original Question: Leetcode 62. Unique Paths","sidebar":"Algorithms"},"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/unique-paths-ii":{"id":"Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/unique-paths-ii","title":"Leetcode 63. Unique Paths II","description":"Original Question: Leetcode 63. Unique Paths II","sidebar":"Algorithms"},"Algorithms/Graph/BFS":{"id":"Algorithms/Graph/BFS","title":"Breadth First Search (BFS)","description":"Understanding Breadth First Search algorithm and its implementation","sidebar":"Algorithms"},"Algorithms/Graph/DFS":{"id":"Algorithms/Graph/DFS","title":"Depth First Search (DFS)","description":"Understanding Depth First Search algorithm and its implementation","sidebar":"Algorithms"},"Algorithms/Graph/Dijkstra":{"id":"Algorithms/Graph/Dijkstra","title":"Dijkstra\'s Algorithm","description":"Understanding Dijkstra\'s shortest path algorithm and its implementation","sidebar":"Algorithms"},"Algorithms/Interval/Introduction":{"id":"Algorithms/Interval/Introduction","title":"Introduction to Interval Problems","description":"Master interval-based algorithms and problem-solving techniques. Learn how to handle interval overlaps, merges, and scheduling problems efficiently.","sidebar":"Algorithms"},"Algorithms/Interval/LineSweep":{"id":"Algorithms/Interval/LineSweep","title":"Line Sweep","description":"","sidebar":"Algorithms"},"Algorithms/Interval/MergeIntervals":{"id":"Algorithms/Interval/MergeIntervals","title":"Merge Intervals Pattern","description":"Learn how to solve interval merging problems with step-by-step explanations and examples. Master techniques for handling overlapping intervals in programming interviews.","sidebar":"Algorithms"},"Algorithms/README":{"id":"Algorithms/README","title":"Preface","description":"Preface"},"Algorithms/SlidingWindow/Introduction":{"id":"Algorithms/SlidingWindow/Introduction","title":"Introduction to Sliding Window","description":"Learn the Sliding Window algorithm pattern with interactive visualizations. Master this essential technique for solving array and string problems efficiently.","sidebar":"Algorithms"},"Algorithms/SlidingWindow/MaxSumSubarray":{"id":"Algorithms/SlidingWindow/MaxSumSubarray","title":"Maximum Sum Subarray","description":"Learn how to solve the Maximum Sum Subarray problem using the Sliding Window technique. Interactive visualization and step-by-step solution explained.","sidebar":"Algorithms"},"Algorithms/Sorting/BubbleSort":{"id":"Algorithms/Sorting/BubbleSort","title":"Bubble Sort","description":"Learn Bubble Sort algorithm with interactive visualization. Understand how bubble sort works with step-by-step examples.","sidebar":"Algorithms"},"Algorithms/Sorting/InsertionSort":{"id":"Algorithms/Sorting/InsertionSort","title":"Insertion Sort","description":"Learn Insertion Sort algorithm with interactive visualization. Understand how insertion sort works with step-by-step examples and implementation.","sidebar":"Algorithms"},"Algorithms/Sorting/MergeSort":{"id":"Algorithms/Sorting/MergeSort","title":"Merge Sort","description":"Learn Merge Sort algorithm with interactive visualization. Understand how merge sort works with step-by-step examples, implementation, and time complexity analysis.","sidebar":"Algorithms"},"Algorithms/Sorting/OddEvenSort":{"id":"Algorithms/Sorting/OddEvenSort","title":"Odd-Even Sort","description":"Learn Odd-Even Sort algorithm with interactive visualization. Understand how odd-even sort (brick sort) works with step-by-step examples and implementation.","sidebar":"Algorithms"},"Algorithms/Sorting/SelectionSort":{"id":"Algorithms/Sorting/SelectionSort","title":"Selection Sort","description":"Learn Selection Sort algorithm with interactive visualization. Understand how selection sort works with step-by-step examples, implementation, and complexity analysis.","sidebar":"Algorithms"},"DataStructures/Advanced/vlist":{"id":"DataStructures/Advanced/vlist","title":"VList Data Structure - A Memory Efficient Alternative to ArrayList","description":"Learn about VList - an efficient data structure similar to ArrayList but with O(log n) access and memory optimization through linked array segments.","sidebar":"Data Structure"},"DataStructures/Basic/BinaryTree/binary-search-tree-definition-properties":{"id":"DataStructures/Basic/BinaryTree/binary-search-tree-definition-properties","title":"Binary Search Tree (BST) - Definition, Properties and Implementation Guide","description":"Learn about Binary Search Trees (BST), their key properties, implementation details and common operations. Includes code examples in Java.","sidebar":"Data Structure"},"DataStructures/Basic/BinaryTree/binary-search-tree-operations":{"id":"DataStructures/Basic/BinaryTree/binary-search-tree-operations","title":"Binary Search Tree (BST) Operations","description":"Learn about fundamental Binary Search Tree operations including lookup, insertion and deletion. Includes code examples and time complexity analysis.","sidebar":"Data Structure"},"DataStructures/Basic/BinaryTree/BSTTraversals":{"id":"DataStructures/Basic/BinaryTree/BSTTraversals","title":"Binary Tree Traversals - BFS and DFS Explained","description":"Learn about different binary tree traversal methods including breadth-first search (BFS) and depth-first search (DFS) with pre-order, in-order, and post-order traversals. Includes code examples and visualizations.","sidebar":"Data Structure"},"DataStructures/Basic/BinaryTree/CommonProblems/LC101":{"id":"DataStructures/Basic/BinaryTree/CommonProblems/LC101","title":"Symmetric Tree","description":"Problem Description","sidebar":"Data Structure"},"DataStructures/Basic/BinaryTree/CommonProblems/LC103":{"id":"DataStructures/Basic/BinaryTree/CommonProblems/LC103","title":"Binary Tree Zigzag Level Order Traversal","description":"Problem Description","sidebar":"Data Structure"},"DataStructures/Basic/BinaryTree/CommonProblems/LC108":{"id":"DataStructures/Basic/BinaryTree/CommonProblems/LC108","title":"Convert Sorted Array to Binary Search Tree","description":"Problem Description","sidebar":"Data Structure"},"DataStructures/Basic/BinaryTree/CommonProblems/LC199":{"id":"DataStructures/Basic/BinaryTree/CommonProblems/LC199","title":"Binary Tree Right Side View","description":"Problem Description","sidebar":"Data Structure"},"DataStructures/Basic/BinaryTree/CommonProblems/LC236":{"id":"DataStructures/Basic/BinaryTree/CommonProblems/LC236","title":"Lowest Common Ancestor of a Binary Tree","description":"Problem Description","sidebar":"Data Structure"},"DataStructures/Basic/BinaryTree/CommonProblems/LC98":{"id":"DataStructures/Basic/BinaryTree/CommonProblems/LC98","title":"Validate Binary Search Tree","description":"Problem Description","sidebar":"Data Structure"},"DataStructures/Basic/BTree/BPlusTree":{"id":"DataStructures/Basic/BTree/BPlusTree","title":"B+ Tree Data Structure","description":"Learn about B+ Tree data structure - how it works, properties, insertion, deletion, and time complexity. Includes interactive visualizations and step-by-step examples.","sidebar":"Data Structure"},"DataStructures/Basic/LinkedList/Deletion":{"id":"DataStructures/Basic/LinkedList/Deletion","title":"How to Delete Elements from a Linked List","description":"Learn different methods to delete nodes from a linked list including head deletion, tail deletion, and deletion by value. Includes time complexity analysis and code examples.","sidebar":"Data Structure"},"DataStructures/Basic/LinkedList/Insertion":{"id":"DataStructures/Basic/LinkedList/Insertion","title":"Linked List Insertion","description":"Learn how to insert elements into a linked list with detailed explanations of head insertion, tail insertion, and position-based insertion. Includes time complexity analysis and code examples.","sidebar":"Data Structure"},"DataStructures/Basic/LinkedList/linked-list-data-structure":{"id":"DataStructures/Basic/LinkedList/linked-list-data-structure","title":"Linked List Data Structure","description":"Learn about linked list data structure, its types, operations, time complexity, advantages and implementation with code examples in Java. Master linked lists for coding interviews.","sidebar":"Data Structure"},"DataStructures/README":{"id":"DataStructures/README","title":"Preface","description":"Preface"},"DataStructures/Tree/SegmentTree":{"id":"DataStructures/Tree/SegmentTree","title":"Segment Tree Data Structure","description":"Learn about Segment Tree data structure - how it works, range queries, updates, and time complexity. Includes implementation examples in Java and common use cases."},"Language/Java/List/ArrayList":{"id":"Language/Java/List/ArrayList","title":"ArrayList","description":"Basics","sidebar":"Language"},"Language/Java/List/Interface":{"id":"Language/Java/List/Interface","title":"List Interface","description":"Basics","sidebar":"Language"},"Language/Java/List/LinkedList":{"id":"Language/Java/List/LinkedList","title":"LinkedList","description":"Basics","sidebar":"Language"},"Language/Java/List/Runtime":{"id":"Language/Java/List/Runtime","title":"Runtime","description":"List                 | add  | remove | get  | contains | next | Data Structure","sidebar":"Language"},"Language/Java/List/Stack":{"id":"Language/Java/List/Stack","title":"Stack","description":"Basics","sidebar":"Language"},"Language/Java/Map/HashMap":{"id":"Language/Java/Map/HashMap","title":"HashMap","description":"Basics","sidebar":"Language"},"Language/Java/Map/HashTable":{"id":"Language/Java/Map/HashTable","title":"HashTable","description":"Basics","sidebar":"Language"},"Language/Java/Map/Interface":{"id":"Language/Java/Map/Interface","title":"Map Interface","description":"Basics","sidebar":"Language"},"Language/Java/Map/LinkedHashMap":{"id":"Language/Java/Map/LinkedHashMap","title":"LinkedHashMap","description":"Basics","sidebar":"Language"},"Language/Java/Map/Runtime":{"id":"Language/Java/Map/Runtime","title":"Runtime","description":"Map |put |   get    | containsKey |   next   | Data Structure","sidebar":"Language"},"Language/Java/Map/TreeMap":{"id":"Language/Java/Map/TreeMap","title":"TreeMap","description":"Basics","sidebar":"Language"},"Language/Java/Overview":{"id":"Language/Java/Overview","title":"Java Specific Notebook","description":"Major Interfaces","sidebar":"Language"},"Language/Java/Queue/Interface":{"id":"Language/Java/Queue/Interface","title":"Queue Interface","description":"Basics","sidebar":"Language"},"Language/Java/Queue/PriorityQueue":{"id":"Language/Java/Queue/PriorityQueue","title":"PriorityQueue","description":"Basics","sidebar":"Language"},"Language/Java/Queue/Runtime":{"id":"Language/Java/Queue/Runtime","title":"Runtime","description":"Queue Interface","sidebar":"Language"},"Language/Java/Set/HashSet":{"id":"Language/Java/Set/HashSet","title":"HashSet","description":"Basics","sidebar":"Language"},"Language/Java/Set/Interface":{"id":"Language/Java/Set/Interface","title":"Set Interface","description":"Basic","sidebar":"Language"},"Language/Java/Set/Runtime":{"id":"Language/Java/Set/Runtime","title":"Runtime","description":"Set                   |    add   |  remove  | contains |   next   | size | Data Structure","sidebar":"Language"},"Language/README":{"id":"Language/README","title":"Preface","description":"This page will be language specific.","sidebar":"Language"},"mdx":{"id":"mdx","title":"Powered by MDX","description":"You can write JSX and use React components within your Markdown thanks to MDX."},"QuestionBank/Leetcode/LC1131":{"id":"QuestionBank/Leetcode/LC1131","title":"Maximum of Absolute Value Expression","description":"Problem Description"},"QuestionBank/Leetcode/LC310":{"id":"QuestionBank/Leetcode/LC310","title":"Minimum Height Trees","description":"Problem Description"},"QuestionBank/Leetcode/LC560":{"id":"QuestionBank/Leetcode/LC560","title":"Minimum Height Trees","description":"Problem Description"},"Stories/ManhattanDistance/index":{"id":"Stories/ManhattanDistance/index","title":"Manhattan Distance - Optimized Navigation \ud83c\udfd9","description":"Learn how to calculate Manhattan Distance (city block distance) efficiently. Includes optimized algorithms, time complexity analysis, and practical examples.","sidebar":"Stories"},"Stories/ReactFiber/index":{"id":"Stories/ReactFiber/index","title":"React Fiber - The Game Changer \u269b\ufe0f","description":"A comprehensive guide to understanding React Fiber, its architecture, and how it improves React performance through concurrent rendering","sidebar":"Stories"}}}')}}]);