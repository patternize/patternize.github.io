"use strict";(self.webpackChunkpatternize_io=self.webpackChunkpatternize_io||[]).push([[1555],{5680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>y});var a=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},s=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=l(t),g=r,y=u["".concat(c,".").concat(g)]||u[g]||d[g]||i;return t?a.createElement(y,p(p({ref:n},s),{},{components:t})):a.createElement(y,p({ref:n},s))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,p=new Array(i);p[0]=g;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[u]="string"==typeof e?e:r,p[1]=o;for(var l=2;l<i;l++)p[l]=t[l];return a.createElement.apply(null,p)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},5542:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>y,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=t(8168),r=t(8587),i=(t(6540),t(5680));const p=["components"],o={id:"LinkedHashMap",title:"LinkedHashMap",sidebar_label:"LinkedHashMap"},c=void 0,l={unversionedId:"Language/Java/Map/LinkedHashMap",id:"Language/Java/Map/LinkedHashMap",title:"LinkedHashMap",description:"Basics",source:"@site/docs/Language/Java/Map/LinkedHashMap.md",sourceDirName:"Language/Java/Map",slug:"/Language/Java/Map/LinkedHashMap",permalink:"/Language/Java/Map/LinkedHashMap",draft:!1,tags:[],version:"current",frontMatter:{id:"LinkedHashMap",title:"LinkedHashMap",sidebar_label:"LinkedHashMap"},sidebar:"Language",previous:{title:"Interface",permalink:"/Language/Java/Map/Interface"},next:{title:"TreeMap",permalink:"/Language/Java/Map/TreeMap"}},s={},u=[{value:"Basics",id:"basics",level:2},{value:"LRU",id:"lru",level:2}],d={toc:u},g="wrapper";function y(e){let{components:n}=e,t=(0,r.A)(e,p);return(0,i.yg)(g,(0,a.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"basics"},"Basics"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Insertion order is preserved")),(0,i.yg)("h2",{id:"lru"},"LRU"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"It is famous that you can implement LRUCache using a LinkedHashMap!")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-java"},"class LRUCache extends LinkedHashMap<Integer, Integer>{\n    private int maxSize;\n    public LRUCache(int capacity) {\n        super(capacity, 0.75f, true);\n        this.maxSize = capacity;\n    }\n\n    //return -1 if miss\n    public int get(int key) {\n        Integer v = super.get(key);\n        return v == null ? -1 : v;\n    }\n\n    public void put(int key, int value) {\n        super.put(key, value);\n    }\n\n    @Override\n    protected boolean removeEldestEntry(Map.Entry<Integer, Integer> eldest) {\n        return this.size() > maxSize; //must override it if used in a fixed cache\n    }\n}\n")))}y.isMDXComponent=!0}}]);