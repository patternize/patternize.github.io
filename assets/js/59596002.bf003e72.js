"use strict";(self.webpackChunkpatternize_io=self.webpackChunkpatternize_io||[]).push([[9711],{7093:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>h,toc:()=>g});var a=i(8168),r=i(8587),s=(i(6540),i(5680)),l=i(2268);const n=["components"],o={slug:"depth-first-search",title:"Depth First Search (DFS)",description:"Understanding Depth First Search algorithm and its implementation",keywords:["dfs","depth first search","graph algorithms","graph traversal"]},p=void 0,h={unversionedId:"Algorithms/Graph/DFS",id:"Algorithms/Graph/DFS",title:"Depth First Search (DFS)",description:"Understanding Depth First Search algorithm and its implementation",source:"@site/docs/Algorithms/Graph/DFS.md",sourceDirName:"Algorithms/Graph",slug:"/Algorithms/Graph/depth-first-search",permalink:"/docs/Algorithms/Graph/depth-first-search",draft:!1,tags:[],version:"current",frontMatter:{slug:"depth-first-search",title:"Depth First Search (DFS)",description:"Understanding Depth First Search algorithm and its implementation",keywords:["dfs","depth first search","graph algorithms","graph traversal"]},sidebar:"Algorithms",previous:{title:"Breadth First Search (BFS)",permalink:"/docs/Algorithms/Graph/breadth-first-search"},next:{title:"Dijkstra's Algorithm",permalink:"/docs/Algorithms/Graph/dijkstra-algorithm"}},c={},g=[{value:"Interactive Visualization",id:"interactive-visualization",level:2},{value:"How DFS Works",id:"how-dfs-works",level:2},{value:"Key Characteristics",id:"key-characteristics",level:2},{value:"Common Applications",id:"common-applications",level:2}],d={toc:g},m="wrapper";function u(e){let{components:t}=e,i=(0,r.A)(e,n);return(0,s.yg)(m,(0,a.A)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,s.yg)("h2",{id:"interactive-visualization"},"Interactive Visualization"),(0,s.yg)("p",null,"Experiment with DFS using this interactive visualization:"),(0,s.yg)(l.G9,{mdxType:"GraphDFS"}),(0,s.yg)("br",null),(0,s.yg)("h1",{id:"depth-first-search-dfs"},"Depth First Search (DFS)"),(0,s.yg)("admonition",{type:"info"},(0,s.yg)("p",{parentName:"admonition"},"DFS is a graph traversal algorithm that explores as far as possible along each branch before backtracking.")),(0,s.yg)("h2",{id:"how-dfs-works"},"How DFS Works"),(0,s.yg)("p",null,"Depth First Search works like exploring a maze by following these steps:"),(0,s.yg)("ol",null,(0,s.yg)("li",{parentName:"ol"},"Start at a chosen vertex"),(0,s.yg)("li",{parentName:"ol"},"Explore as far as possible along each branch"),(0,s.yg)("li",{parentName:"ol"},"Backtrack when you reach a dead end"),(0,s.yg)("li",{parentName:"ol"},"Continue until all vertices are visited")),(0,s.yg)("h2",{id:"key-characteristics"},"Key Characteristics"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"Uses a stack (or recursion)"),(0,s.yg)("li",{parentName:"ul"},"Time Complexity: O(V + E) where V is vertices and E is edges"),(0,s.yg)("li",{parentName:"ul"},"Space Complexity: O(V)"),(0,s.yg)("li",{parentName:"ul"},"Goes deep before going wide"),(0,s.yg)("li",{parentName:"ul"},"Useful for topological sorting")),(0,s.yg)("h2",{id:"common-applications"},"Common Applications"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},"Topological Sorting"),(0,s.yg)("li",{parentName:"ul"},"Finding cycles in a graph"),(0,s.yg)("li",{parentName:"ul"},"Solving puzzles with only one solution"),(0,s.yg)("li",{parentName:"ul"},"Finding connected components"),(0,s.yg)("li",{parentName:"ul"},"Maze generation algorithms")))}u.isMDXComponent=!0}}]);