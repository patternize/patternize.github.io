"use strict";(self.webpackChunkpatternize_io=self.webpackChunkpatternize_io||[]).push([[5114],{5680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>y});var r=a(6540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},p=Object.keys(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),s=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,p=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(a),g=n,y=u["".concat(l,".").concat(g)]||u[g]||m[g]||p;return a?r.createElement(y,o(o({ref:t},c),{},{components:a})):r.createElement(y,o({ref:t},c))}));function y(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=a.length,o=new Array(p);o[0]=g;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:n,o[1]=i;for(var s=2;s<p;s++)o[s]=a[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}g.displayName="MDXCreateElement"},9067:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>y,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=a(8168),n=a(8587),p=(a(6540),a(5680));const o=["components"],i={id:"TreeMap",title:"TreeMap",sidebar_label:"TreeMap"},l=void 0,s={unversionedId:"Applications/Language/Java/Map/TreeMap",id:"Applications/Language/Java/Map/TreeMap",title:"TreeMap",description:"Basics",source:"@site/docs/Applications/Language/Java/Map/TreeMap.md",sourceDirName:"Applications/Language/Java/Map",slug:"/Applications/Language/Java/Map/TreeMap",permalink:"/docs/Applications/Language/Java/Map/TreeMap",draft:!1,tags:[],version:"current",frontMatter:{id:"TreeMap",title:"TreeMap",sidebar_label:"TreeMap"},sidebar:"Applications",previous:{title:"LinkedHashMap",permalink:"/docs/Applications/Language/Java/Map/LinkedHashMap"},next:{title:"Runtime",permalink:"/docs/Applications/Language/Java/Map/Runtime"}},c={},u=[{value:"Basics",id:"basics",level:2},{value:"TreeMap vs HashMap",id:"treemap-vs-hashmap",level:2}],m={toc:u},g="wrapper";function y(e){let{components:t}=e,a=(0,n.A)(e,o);return(0,p.yg)(g,(0,r.A)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,p.yg)("h2",{id:"basics"},"Basics"),(0,p.yg)("ul",null,(0,p.yg)("li",{parentName:"ul"},"TreeMap is ordered by Keys"),(0,p.yg)("li",{parentName:"ul"},"put(), get(), remove() all cost O(logN) in the worst scenario"),(0,p.yg)("li",{parentName:"ul"},"Iteration order predictable"),(0,p.yg)("li",{parentName:"ul"},"Allows only Values to be null, Keys cannot be null")),(0,p.yg)("h2",{id:"treemap-vs-hashmap"},"TreeMap vs HashMap"),(0,p.yg)("ul",null,(0,p.yg)("li",{parentName:"ul"},"TreeMap are naturally sorted by order of key, HashMap is not:")),(0,p.yg)("pre",null,(0,p.yg)("code",{parentName:"pre"},"TreeMap<Integer, Integer> tm = new TreeMap<>();\ntm.put(3, 1);\ntm.put(2, 2);\ntm.put(1, 10);\ntm.put(-100, 2);\ntm.values(); //[2, 10, 2, 1]\n\nHashMap<Integer, Integer> hm = new HashMap<>();\nhm.put(3, 1);\nhm.put(2, 2);\nhm.put(1, 10);\nhm.put(-100, 2);\nhm.values(); // [10, 2, 1, 2]\n")))}y.isMDXComponent=!0}}]);