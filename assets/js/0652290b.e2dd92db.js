"use strict";(self.webpackChunkpatternize_io=self.webpackChunkpatternize_io||[]).push([[5349],{5680:(t,e,n)=>{n.d(e,{xA:()=>o,yg:()=>c});var a=n(6540);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var g=a.createContext({}),u=function(t){var e=a.useContext(g),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},o=function(t){var e=u(t.components);return a.createElement(g.Provider,{value:e},t.children)},y="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,g=t.parentName,o=p(t,["components","mdxType","originalType","parentName"]),y=u(n),d=r,c=y["".concat(g,".").concat(d)]||y[d]||m[d]||l;return n?a.createElement(c,i(i({ref:e},o),{},{components:n})):a.createElement(c,i({ref:e},o))}));function c(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=d;var p={};for(var g in e)hasOwnProperty.call(e,g)&&(p[g]=e[g]);p.originalType=t,p[y]="string"==typeof t?t:r,i[1]=p;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4645:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>g,default:()=>c,frontMatter:()=>p,metadata:()=>u,toc:()=>y});var a=n(8168),r=n(8587),l=(n(6540),n(5680));const i=["components"],p={id:"Runtime",title:"Runtime",sidebar_label:"Runtime"},g=void 0,u={unversionedId:"Applications/Language/Java/Map/Runtime",id:"Applications/Language/Java/Map/Runtime",title:"Runtime",description:"Map |put |   get    | containsKey |   next   | Data Structure",source:"@site/docs/Applications/Language/Java/Map/runtime.md",sourceDirName:"Applications/Language/Java/Map",slug:"/Applications/Language/Java/Map/Runtime",permalink:"/docs/Applications/Language/Java/Map/Runtime",draft:!1,tags:[],version:"current",frontMatter:{id:"Runtime",title:"Runtime",sidebar_label:"Runtime"},sidebar:"Applications",previous:{title:"TreeMap",permalink:"/docs/Applications/Language/Java/Map/TreeMap"},next:{title:"Introduction",permalink:"/docs/Applications/Language/Java/Overview"}},o={},y=[],m={toc:y},d="wrapper";function c(t){let{components:e}=t,n=(0,r.A)(t,i);return(0,l.yg)(d,(0,a.A)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Map"),(0,l.yg)("th",{parentName:"tr",align:null},"put"),(0,l.yg)("th",{parentName:"tr",align:null},"get"),(0,l.yg)("th",{parentName:"tr",align:null},"containsKey"),(0,l.yg)("th",{parentName:"tr",align:null},"next"),(0,l.yg)("th",{parentName:"tr",align:null},"Data Structure"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"HashMap"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1) ~ O(n)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(h / n)"),(0,l.yg)("td",{parentName:"tr",align:null},"Hash Table")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"LinkedHashMap"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1) ~O(n)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1)"),(0,l.yg)("td",{parentName:"tr",align:null},"Hash Table + Linked List")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"IdentityHashMap"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1) ~O(n)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(h / n)"),(0,l.yg)("td",{parentName:"tr",align:null},"Array")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"WeakHashMap"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1) ~O(n)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(h / n)"),(0,l.yg)("td",{parentName:"tr",align:null},"Hash Table")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"EnumMap"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1) ~O(n)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1)"),(0,l.yg)("td",{parentName:"tr",align:null},"Array")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"TreeMap"),(0,l.yg)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.yg)("td",{parentName:"tr",align:null},"Red-black tree")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"ConcurrentHashMap"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1) ~O(n)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(h / n)"),(0,l.yg)("td",{parentName:"tr",align:null},"Hash Tables")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"ConcurrentSkipListMap"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1) ~O(n)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(log n)"),(0,l.yg)("td",{parentName:"tr",align:null},"O(1)"),(0,l.yg)("td",{parentName:"tr",align:null},"Skip List")))))}c.isMDXComponent=!0}}]);