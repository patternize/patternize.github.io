"use strict";(self.webpackChunkpatternize_io=self.webpackChunkpatternize_io||[]).push([[6626],{5680:(e,r,a)=>{a.d(r,{xA:()=>s,yg:()=>y});var t=a(6540);function n(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function p(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?p(Object(a),!0).forEach((function(r){n(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function l(e,r){if(null==e)return{};var a,t,n=function(e,r){if(null==e)return{};var a,t,n={},p=Object.keys(e);for(t=0;t<p.length;t++)a=p[t],r.indexOf(a)>=0||(n[a]=e[a]);return n}(e,r);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(t=0;t<p.length;t++)a=p[t],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=t.createContext({}),u=function(e){var r=t.useContext(i),a=r;return e&&(a="function"==typeof e?e(r):o(o({},r),e)),a},s=function(e){var r=u(e.components);return t.createElement(i.Provider,{value:r},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},g=t.forwardRef((function(e,r){var a=e.components,n=e.mdxType,p=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(a),g=n,y=c["".concat(i,".").concat(g)]||c[g]||m[g]||p;return a?t.createElement(y,o(o({ref:r},s),{},{components:a})):t.createElement(y,o({ref:r},s))}));function y(e,r){var a=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var p=a.length,o=new Array(p);o[0]=g;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l[c]="string"==typeof e?e:n,o[1]=l;for(var u=2;u<p;u++)o[u]=a[u];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}g.displayName="MDXCreateElement"},4365:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>y,frontMatter:()=>l,metadata:()=>u,toc:()=>c});var t=a(8168),n=a(8587),p=(a(6540),a(5680));const o=["components"],l={id:"TreeMap",title:"TreeMap",sidebar_label:"TreeMap"},i=void 0,u={unversionedId:"Language/Java/Map/TreeMap",id:"Language/Java/Map/TreeMap",title:"TreeMap",description:"Basics",source:"@site/docs/Language/Java/Map/TreeMap.md",sourceDirName:"Language/Java/Map",slug:"/Language/Java/Map/TreeMap",permalink:"/docs/Language/Java/Map/TreeMap",draft:!1,tags:[],version:"current",frontMatter:{id:"TreeMap",title:"TreeMap",sidebar_label:"TreeMap"},sidebar:"Language",previous:{title:"HashTable",permalink:"/docs/Language/Java/Map/HashTable"},next:{title:"LinkedHashMap",permalink:"/docs/Language/Java/Map/LinkedHashMap"}},s={},c=[{value:"Basics",id:"basics",level:2},{value:"TreeMap vs HashMap",id:"treemap-vs-hashmap",level:2}],m={toc:c},g="wrapper";function y(e){let{components:r}=e,a=(0,n.A)(e,o);return(0,p.yg)(g,(0,t.A)({},m,a,{components:r,mdxType:"MDXLayout"}),(0,p.yg)("h2",{id:"basics"},"Basics"),(0,p.yg)("ul",null,(0,p.yg)("li",{parentName:"ul"},"TreeMap is ordered by Keys"),(0,p.yg)("li",{parentName:"ul"},"put(), get(), remove() all cost O(logN) in the worst scenario"),(0,p.yg)("li",{parentName:"ul"},"Iteration order predictable"),(0,p.yg)("li",{parentName:"ul"},"Allows only Values to be null, Keys cannot be null")),(0,p.yg)("h2",{id:"treemap-vs-hashmap"},"TreeMap vs HashMap"),(0,p.yg)("ul",null,(0,p.yg)("li",{parentName:"ul"},"TreeMap are naturally sorted by order of key, HashMap is not:")),(0,p.yg)("pre",null,(0,p.yg)("code",{parentName:"pre"},"TreeMap<Integer, Integer> tm = new TreeMap<>();\ntm.put(3, 1);\ntm.put(2, 2);\ntm.put(1, 10);\ntm.put(-100, 2);\ntm.values(); //[2, 10, 2, 1]\n\nHashMap<Integer, Integer> hm = new HashMap<>();\nhm.put(3, 1);\nhm.put(2, 2);\nhm.put(1, 10);\nhm.put(-100, 2);\nhm.values(); // [10, 2, 1, 2]\n")))}y.isMDXComponent=!0}}]);