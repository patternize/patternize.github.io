"use strict";(self.webpackChunkpatternize_io=self.webpackChunkpatternize_io||[]).push([[2235],{5680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>f});var n=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(r),d=a,f=m["".concat(u,".").concat(d)]||m[d]||p[d]||o;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[m]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9365:(e,t,r)=>{r.d(t,{A:()=>l});var n=r(6540),a=r(53);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:r,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.A)(o.tabItem,l),hidden:r},t)}},1470:(e,t,r)=>{r.d(t,{A:()=>A});var n=r(8168),a=r(6540),o=r(53),l=r(3104),i=r(6347),u=r(7485),s=r(1682),c=r(9466);function m(e){return function(e){var t,r;return null!=(t=null==(r=a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:r.filter(Boolean))?t:[]}(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:a}}=e;return{value:t,label:r,attributes:n,default:a}}))}function p(e){const{values:t,children:r}=e;return(0,a.useMemo)((()=>{const e=null!=t?t:m(r);return function(e){const t=(0,s.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,r])}function d(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:r}=e;const n=(0,i.W6)(),o=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:t,groupId:r});return[(0,u.aZ)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace(Object.assign({},n.location,{search:t.toString()}))}),[o,n])]}function b(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,o=p(e),[l,i]=(0,a.useState)((()=>function(e){var t;let{defaultValue:r,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!d({value:r,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+r+'" but none of its children has the corresponding value. Available values are: '+n.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return r}const a=null!=(t=n.find((e=>e.default)))?t:n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[u,s]=f({queryString:r,groupId:n}),[m,b]=function(e){let{groupId:t}=e;const r=function(e){return e?"docusaurus.tab."+e:null}(t),[n,o]=(0,c.Dv)(r);return[n,(0,a.useCallback)((e=>{r&&o.set(e)}),[r,o])]}({groupId:n}),g=(()=>{const e=null!=u?u:m;return d({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error("Can't select invalid tab value="+e);i(e),s(e),b(e)}),[s,b,o]),tabValues:o}}var g=r(2303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){let{className:t,block:r,selectedValue:i,selectValue:u,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,l.a_)(),p=e=>{const t=e.currentTarget,r=c.indexOf(t),n=s[r].value;n!==i&&(m(t),u(n))},d=e=>{var t;let r=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{var n;const t=c.indexOf(e.currentTarget)+1;r=null!=(n=c[t])?n:c[0];break}case"ArrowLeft":{var a;const t=c.indexOf(e.currentTarget)-1;r=null!=(a=c[t])?a:c[c.length-1];break}}null==(t=r)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":r},t)},s.map((e=>{let{value:t,label:r,attributes:l}=e;return a.createElement("li",(0,n.A)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:p},l,{className:(0,o.A)("tabs__item",y.tabItem,null==l?void 0:l.className,{"tabs__item--active":i===t})}),null!=r?r:t)})))}function v(e){let{lazy:t,children:r,selectedValue:n}=e;const o=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function w(e){const t=b(e);return a.createElement("div",{className:(0,o.A)("tabs-container",y.tabList)},a.createElement(h,(0,n.A)({},e,t)),a.createElement(v,(0,n.A)({},e,t)))}function A(e){const t=(0,g.A)();return a.createElement(w,(0,n.A)({key:String(t)},e))}},2934:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>g,frontMatter:()=>s,metadata:()=>m,toc:()=>d});var n=r(8168),a=r(8587),o=(r(6540),r(5680)),l=r(1470),i=r(9365);const u=["components"],s={title:"Leetcode 1277. Count Square Submatrices with All Ones",tags:["DynamicProgramming/Coordinate"]},c="Question",m={unversionedId:"Algorithms/DynamicProgramming/Coordinate/Matrix/count-square-submatrices-with-all-ones",id:"Algorithms/DynamicProgramming/Coordinate/Matrix/count-square-submatrices-with-all-ones",title:"Leetcode 1277. Count Square Submatrices with All Ones",description:"Original Question: Leetcode 1277. Count Square Submatrices with All Ones",source:"@site/docs/Algorithms/DynamicProgramming/Coordinate/Matrix/1277-count-square-submatrices-with-all-ones.md",sourceDirName:"Algorithms/DynamicProgramming/Coordinate/Matrix",slug:"/Algorithms/DynamicProgramming/Coordinate/Matrix/count-square-submatrices-with-all-ones",permalink:"/docs/Algorithms/DynamicProgramming/Coordinate/Matrix/count-square-submatrices-with-all-ones",draft:!1,tags:[{label:"DynamicProgramming/Coordinate",permalink:"/docs/tags/dynamic-programming-coordinate"}],version:"current",sidebarPosition:1277,frontMatter:{title:"Leetcode 1277. Count Square Submatrices with All Ones",tags:["DynamicProgramming/Coordinate"]},sidebar:"Algorithms",previous:{title:"Leetcode 361. Bomb Enemy",permalink:"/docs/Algorithms/DynamicProgramming/Coordinate/Matrix/bomb-enemy"},next:{title:"Optimal Path Finding",permalink:"/docs/Algorithms/DynamicProgramming/Coordinate/OptimalPathFinding/"}},p={},d=[{value:"Example 1:",id:"example-1",level:3},{value:"Example 2:",id:"example-2",level:3}],f={toc:d},b="wrapper";function g(e){let{components:t}=e,r=(0,a.A)(e,u);return(0,o.yg)(b,(0,n.A)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"question"},"Question"),(0,o.yg)("p",null,"Original Question: ",(0,o.yg)("a",{parentName:"p",href:"https://leetcode.com/problems/count-square-submatrices-with-all-ones/"},"Leetcode 1277. Count Square Submatrices with All Ones")),(0,o.yg)("p",null,"Given a m * n matrix of ones and zeros, return how many square submatrices have all ones."),(0,o.yg)("h3",{id:"example-1"},"Example 1:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"Input: matrix =\n[\n  [0,1,1,1],\n  [1,1,1,1],\n  [0,1,1,1]\n]\nOutput: 15\nExplanation: \nThere are 10 squares of side 1.\nThere are 4 squares of side 2.\nThere is  1 square of side 3.\nTotal number of squares = 10 + 4 + 1 = 15.\n")),(0,o.yg)("h3",{id:"example-2"},"Example 2:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"Input: matrix = \n[\n  [1,0,1],\n  [1,1,0],\n  [1,1,0]\n]\nOutput: 7\nExplanation: \nThere are 6 squares of side 1.  \nThere is 1 square of side 2. \nTotal number of squares = 6 + 1 = 7.\n")),(0,o.yg)("h1",{id:"solution"},"Solution"),(0,o.yg)(l.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"Python",value:"py"}],mdxType:"Tabs"},(0,o.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    public int countSquares(int[][] A) {\n        int res = 0;\n        for (int i = 0; i < A.length; ++i) {\n            for (int j = 0; j < A[0].length; ++j) {\n                if (A[i][j] > 0 && i > 0 && j > 0) {\n                    A[i][j] = Math.min(A[i - 1][j - 1], Math.min(A[i - 1][j], A[i][j - 1])) + 1;\n                }\n                res += A[i][j];\n            }\n        }\n        return res;\n    }\n}\n")))))}g.isMDXComponent=!0}}]);