"use strict";(self.webpackChunkpatternize_io=self.webpackChunkpatternize_io||[]).push([[9452],{5680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>d});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function u(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?u(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},u=Object.keys(e);for(r=0;r<u.length;r++)t=u[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(r=0;r<u.length;r++)t=u[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),s=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(i.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,u=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(t),f=a,d=p["".concat(i,".").concat(f)]||p[f]||m[f]||u;return t?r.createElement(d,o(o({ref:n},c),{},{components:t})):r.createElement(d,o({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var u=t.length,o=new Array(u);o[0]=f;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<u;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9365:(e,n,t)=>{t.d(n,{A:()=>o});var r=t(6540),a=t(53);const u={tabItem:"tabItem_Ymn6"};function o(e){let{children:n,hidden:t,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.A)(u.tabItem,o),hidden:t},n)}},1470:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(8168),a=t(6540),u=t(53),o=t(3104),l=t(6347),i=t(7485),s=t(1682),c=t(9466);function p(e){return function(e){var n,t;return null!=(n=null==(t=a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}function m(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=null!=n?n:p(t);return function(e){const n=(0,s.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function f(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function d(e){let{queryString:n=!1,groupId:t}=e;const r=(0,l.W6)(),u=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:n,groupId:t});return[(0,i.aZ)(u),(0,a.useCallback)((e=>{if(!u)return;const n=new URLSearchParams(r.location.search);n.set(u,e),r.replace(Object.assign({},r.location,{search:n.toString()}))}),[u,r])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,u=m(e),[o,l]=(0,a.useState)((()=>function(e){var n;let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!f({value:t,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+r.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}const a=null!=(n=r.find((e=>e.default)))?n:r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:u}))),[i,s]=d({queryString:t,groupId:r}),[p,b]=function(e){let{groupId:n}=e;const t=function(e){return e?"docusaurus.tab."+e:null}(n),[r,u]=(0,c.Dv)(t);return[r,(0,a.useCallback)((e=>{t&&u.set(e)}),[t,u])]}({groupId:r}),g=(()=>{const e=null!=i?i:p;return f({value:e,tabValues:u})?e:null})();(0,a.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!f({value:e,tabValues:u}))throw new Error("Can't select invalid tab value="+e);l(e),s(e),b(e)}),[s,b,u]),tabValues:u}}var g=t(2303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:n,block:t,selectedValue:l,selectValue:i,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.a_)(),m=e=>{const n=e.currentTarget,t=c.indexOf(n),r=s[t].value;r!==l&&(p(n),i(r))},f=e=>{var n;let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{var r;const n=c.indexOf(e.currentTarget)+1;t=null!=(r=c[n])?r:c[0];break}case"ArrowLeft":{var a;const n=c.indexOf(e.currentTarget)-1;t=null!=(a=c[n])?a:c[c.length-1];break}}null==(n=t)||n.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,u.A)("tabs",{"tabs--block":t},n)},s.map((e=>{let{value:n,label:t,attributes:o}=e;return a.createElement("li",(0,r.A)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>c.push(e),onKeyDown:f,onClick:m},o,{className:(0,u.A)("tabs__item",v.tabItem,null==o?void 0:o.className,{"tabs__item--active":l===n})}),null!=t?t:n)})))}function h(e){let{lazy:n,children:t,selectedValue:r}=e;const u=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=u.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},u.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r}))))}function N(e){const n=b(e);return a.createElement("div",{className:(0,u.A)("tabs-container",v.tabList)},a.createElement(y,(0,r.A)({},e,n)),a.createElement(h,(0,r.A)({},e,n)))}function w(e){const n=(0,g.A)();return a.createElement(N,(0,r.A)({key:String(n)},e))}},8879:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>c,default:()=>g,frontMatter:()=>s,metadata:()=>p,toc:()=>f});var r=t(8168),a=t(8587),u=(t(6540),t(5680)),o=t(1470),l=t(9365);const i=["components"],s={id:"ConfusingNumber",title:"Confusing Number",sidebar_label:"Confusing Number"},c=void 0,p={unversionedId:"Algorithms/Backtracking/ConfusingNumber",id:"Algorithms/Backtracking/ConfusingNumber",title:"Confusing Number",description:"Problem Description",source:"@site/docs/Algorithms/Backtracking/ConfusingNumber.md",sourceDirName:"Algorithms/Backtracking",slug:"/Algorithms/Backtracking/ConfusingNumber",permalink:"/Algorithms/Backtracking/ConfusingNumber",draft:!1,tags:[],version:"current",frontMatter:{id:"ConfusingNumber",title:"Confusing Number",sidebar_label:"Confusing Number"},sidebar:"Algorithms",previous:{title:"Expression Puzzle",permalink:"/Algorithms/Backtracking/ExpressionPuzzle"},next:{title:"Breadth First Search (BFS)",permalink:"/Algorithms/Graph/breadth-first-search"}},m={},f=[{value:"Problem Description",id:"problem-description",level:2}],d={toc:f},b="wrapper";function g(e){let{components:n}=e,t=(0,a.A)(e,i);return(0,u.yg)(b,(0,r.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,u.yg)("h2",{id:"problem-description"},"Problem Description"),(0,u.yg)("p",null,"Source: ",(0,u.yg)("a",{parentName:"p",href:"https://leetcode.com/problems/confusing-number-ii/"},"https://leetcode.com/problems/confusing-number-ii/")),(0,u.yg)("p",null,"We can rotate digits by 180 degrees to form new digits. When 0, 1, 6, 8, 9 are rotated 180 degrees, they become 0, 1, 9, 8, 6 respectively. When 2, 3, 4, 5 and 7 are rotated 180 degrees, they become invalid."),(0,u.yg)("p",null,"A confusing number is a number that when rotated 180 degrees becomes a different number with each digit valid.(Note that the rotated number can be greater than the original number.)"),(0,u.yg)("p",null,"Given a positive integer N, return the number of confusing numbers between 1 and N inclusive."),(0,u.yg)("p",null,"Example 1:"),(0,u.yg)("pre",null,(0,u.yg)("code",{parentName:"pre"},"Input: 20\nOutput: 6\nExplanation: \nThe confusing numbers are [6,9,10,16,18,19].\n6 converts to 9.\n9 converts to 6.\n10 converts to 01 which is just 1.\n16 converts to 91.\n18 converts to 81.\n19 converts to 61.\n")),(0,u.yg)("p",null,"Example 2:"),(0,u.yg)("pre",null,(0,u.yg)("code",{parentName:"pre"},"Input: 100\nOutput: 19\nExplanation: \nThe confusing numbers are [6,9,10,16,18,19,60,61,66,68,80,81,86,89,90,91,98,99,100].\n")),(0,u.yg)("p",null,"Note:\n",(0,u.yg)("inlineCode",{parentName:"p"},"1 <= N <= 10^9")),(0,u.yg)(o.A,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"Python",value:"py"},{label:"C++",value:"C++"}],mdxType:"Tabs"},(0,u.yg)(l.A,{value:"java",mdxType:"TabItem"},(0,u.yg)("pre",null,(0,u.yg)("code",{parentName:"pre",className:"language-java"},"class Solution {\n    Map<Integer, Integer> map;\n    int count = 0;\n    public Solution() {\n        map = new HashMap<>();\n        map.put(6, 9);\n        map.put(9, 6);\n        map.put(0, 0);\n        map.put(1, 1);\n        map.put(8, 8); \n    }\n\n    private boolean isConfusingNumber(long n) {\n        long src = n;\n        long res = 0;\n        while (n > 0) {\n            res = res * 10 + map.get((int) n % 10); \n            n /= 10;\n        }\n        return res != src;\n    }\n\n    public int confusingNumberII(int N) {\n        for(int x: new int[]{1, 6, 8, 9}){\n            dfs(x, N);\n        }\n        return count;\n    }\n\n    public void dfs(long x, int N){\n        if(x>N) return;\n        if(isConfusingNumber(x)){\n            count++;\n        }\n        for(int y: new int[]{0, 1, 6, 8, 9}){\n            dfs(x*10 + y, N);\n        }\n    }\n}\n"))),(0,u.yg)(l.A,{value:"py",mdxType:"TabItem"},(0,u.yg)("pre",null,(0,u.yg)("code",{parentName:"pre",className:"language-py"},"class Solution:\n    def confusingNumberII(self, N: int) -> int:\n        digits = {0:0, 1:1, 6:9, 8:8, 9:6}\n\n        def count(cur, rev, digit): \n            res = 0 \n            if cur != rev: \n                res += 1                  \n            for k,v in digits.items():\n                if cur == 0 and k == 0: \n                    continue                     \n                if cur*10 + k > N: \n                    break \n                else: \n                    res += count(cur*10+k, v*digit + rev, digit*10)\n            return res \n\n        return count(0,0,1)\n"))),(0,u.yg)(l.A,{value:"C++",mdxType:"TabItem"},(0,u.yg)("pre",null,(0,u.yg)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int confusingNumberII(int N) {\n        ans = 0;\n        for (auto x: {1,6,8,9})\n            dfs(x, N);\n        return ans;\n    }\n\nprivate:\n    void dfs(long x, int N) {\n        if (x > N) return;\n        if (isConfusing(x)) ans++;\n        for (auto y: {0,1,6,8,9})\n            dfs(x * 10 + y, N);\n    }\n    bool isConfusing(int x) {\n        int num[10];\n        int size = 0;\n        while(x) {\n            num[size++] = x % 10;\n            x /= 10;\n        }\n        for (int l = 0, r = size - 1; l <= r; l++, r--) {\n            if (num[l] != myMap[num[r]])\n                return true;\n        }\n        return false;\n    }\n    const int myMap[10] = {0,1,2,3,4,5,9,7,8,6};\n    int ans;\n};\n")))))}g.isMDXComponent=!0}}]);